$wnd.app.runAsyncCallback2("function $clinit_CodeResource_5(){\n  $clinit_CodeResource_5 = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator_5(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5 = emptyMethod;\n  externalTextUrl_5 = ($clinit_Impl() , $moduleBase) + '99D64D93E2995FDDEA1770DD8B8CE349.cache.txt';\n  externalTextCache_5 = initUnidimensionalArray(Lcom_google_gwt_resources_client_TextResource_2_classLit, $intern_2, 44, 16, 0, 1);\n}\n\nvar externalTextCache_5, externalTextUrl_5, initBlockButtons, initBootstrapButtons, initButtonSizes, initButtonsBasicGroup, initButtonsToolbar, initDisabledButtons, initDropUp, initIconButtons, initJustifyGroup, initMaterialDesignButtons, initNestingGroup, initSingleDropdownButtons, initSizingGroup, initSplitButton, initTextIconButtons, initVerticalGroup;\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initBlockButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initBlockButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initBlockButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 0);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initBootstrapButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initBootstrapButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initBootstrapButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 1);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonSizesInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonSizesInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initButtonSizes = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 2);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsBasicGroupInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsBasicGroupInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initButtonsBasicGroup = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 3);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsToolbarInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsToolbarInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initButtonsToolbar = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 4);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initDisabledButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initDisabledButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initDisabledButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 5);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initDropUpInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initDropUpInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initDropUp = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 6);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initIconButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initIconButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initIconButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 7);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initJustifyGroupInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initJustifyGroupInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initJustifyGroup = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 8);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initMaterialDesignButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initMaterialDesignButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initMaterialDesignButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 9);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initNestingGroupInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initNestingGroupInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initNestingGroup = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 10);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initSingleDropdownButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initSingleDropdownButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initSingleDropdownButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 11);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initSizingGroupInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initSizingGroupInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initSizingGroup = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 12);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initSplitButtonInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initSplitButtonInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initSplitButton = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 13);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initTextIconButtonsInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initTextIconButtonsInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initTextIconButtons = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 14);\n}\n\nfunction $clinit_CodeResource_default_InlineClientBundleGenerator$initVerticalGroupInitializer(){\n  $clinit_CodeResource_default_InlineClientBundleGenerator$initVerticalGroupInitializer = emptyMethod;\n  $clinit_CodeResource_default_InlineClientBundleGenerator_5();\n  initVerticalGroup = new ExternalTextResourcePrototype(($clinit_UriUtils() , new SafeUriString(externalTextUrl_5)), externalTextCache_5, 15);\n}\n\nfunction $heading(content_0){\n  var headingElement;\n  headingElement = castToNative($textContent(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('h2'), $wnd.HTMLElement)), content_0).element, $wnd.HTMLHeadingElement);\n  headingElement.style.marginTop = '25px';\n  headingElement.style.marginBottom = '15px';\n  headingElement.style.fontSize = '15px';\n  headingElement.style.color = '#000';\n  headingElement.style.display = 'block';\n  return headingElement;\n}\n\nfunction $initBlockButtons(this$static){\n  var card, dangerBlock, defaultBlock, infoBlock, primaryBlock, warningBlock;\n  card = create_5('BLOCK BUTTONS', 'Create block level buttons');\n  defaultBlock = $setBlock(new Button_1('DEFAULT', ($clinit_StyleType() , DEFAULT_0))).buttonElement;\n  primaryBlock = $setBlock(new Button_1('PRIMARY', PRIMARY)).buttonElement;\n  infoBlock = $setBlock(new Button_1('INFO', INFO_2)).buttonElement;\n  warningBlock = $setBlock(new Button_1('WARNING', WARNING_2)).buttonElement;\n  dangerBlock = $setBlock(new Button_1('DANGER', DANGER)).buttonElement;\n  defaultBlock.style.margin = '5px';\n  defaultBlock.style.minWidth = '120px';\n  primaryBlock.style.margin = '5px';\n  primaryBlock.style.minWidth = '120px';\n  infoBlock.style.margin = '5px';\n  infoBlock.style.minWidth = '120px';\n  warningBlock.style.margin = '5px';\n  warningBlock.style.minWidth = '120px';\n  dangerBlock.style.margin = '5px';\n  dangerBlock.style.minWidth = '120px';\n  card.body_0.appendChild(defaultBlock);\n  card.body_0.appendChild(primaryBlock);\n  card.body_0.appendChild(infoBlock);\n  card.body_0.appendChild(warningBlock);\n  card.body_0.appendChild(dangerBlock);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initBlockButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initBlockButtons)).templated_card_root_element);\n}\n\nfunction $initBootstrapButtons(this$static){\n  var card, dangerBtn, defaultBtn, infoBtn, primaryBtn, successBtn, warningBtn;\n  card = create_5('BOOTSTRAP DEFAULT BUTTONS', 'Use any of the available button classes to quickly create a styled button');\n  defaultBtn = (new Button_1('DEFAULT', ($clinit_StyleType() , DEFAULT_0))).buttonElement;\n  primaryBtn = (new Button_1('PRIMARY', PRIMARY)).buttonElement;\n  successBtn = (new Button_1('SUCCESS', SUCCESS_1)).buttonElement;\n  infoBtn = (new Button_1('INFO', INFO_2)).buttonElement;\n  warningBtn = (new Button_1('WARNING', WARNING_2)).buttonElement;\n  dangerBtn = (new Button_1('DANGER', DANGER)).buttonElement;\n  defaultBtn.style.margin = '5px';\n  defaultBtn.style.minWidth = '120px';\n  card.body_0.appendChild(defaultBtn);\n  primaryBtn.style.margin = '5px';\n  primaryBtn.style.minWidth = '120px';\n  card.body_0.appendChild(primaryBtn);\n  successBtn.style.margin = '5px';\n  successBtn.style.minWidth = '120px';\n  card.body_0.appendChild(successBtn);\n  infoBtn.style.margin = '5px';\n  infoBtn.style.minWidth = '120px';\n  card.body_0.appendChild(infoBtn);\n  warningBtn.style.margin = '5px';\n  warningBtn.style.minWidth = '120px';\n  card.body_0.appendChild(warningBtn);\n  dangerBtn.style.margin = '5px';\n  dangerBtn.style.minWidth = '120px';\n  card.body_0.appendChild(dangerBtn);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initBootstrapButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initBootstrapButtons)).templated_card_root_element);\n}\n\nfunction $initButtonSizes(this$static){\n  var card, column, column2, column3, column4, defaultBtn, defaultLarge, defaultSmall, defaultXsmall, infoBtn, infoLarge, infoSmall, infoXsmall, primaryBtn, primaryLarge, primarySmall, primaryXsmall, row, warningBtn, warningLarge, warningSmall, warningXsmall;\n  card = create_5('BUTTON SIZES', 'You can resize the buttons');\n  column = $onXSmall($onSmall($onLarge(new Column(castToNative((new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement))).element, $wnd.HTMLDivElement)), ($clinit_Column$OnLarge() , three)), ($clinit_Column$OnSmall() , six_1)), ($clinit_Column$OnXSmall() , twelve_2));\n  defaultLarge = $setSize(new Button_1('LARGE', ($clinit_StyleType() , DEFAULT_0)), ($clinit_ButtonSize() , LARGE));\n  defaultBtn = new Button_1('DEFAULT', DEFAULT_0);\n  defaultSmall = $setSize(new Button_1('SMALL', DEFAULT_0), SMALL);\n  defaultXsmall = $setSize(new Button_1('XSMALL', DEFAULT_0), XSMALL);\n  defaultLarge.buttonElement.style.margin = '5px';\n  defaultBtn.buttonElement.style.margin = '5px';\n  defaultSmall.buttonElement.style.margin = '5px';\n  defaultXsmall.buttonElement.style.margin = '5px';\n  defaultLarge.buttonElement.style.minWidth = '200px';\n  defaultBtn.buttonElement.style.minWidth = '200px';\n  defaultSmall.buttonElement.style.minWidth = '200px';\n  defaultXsmall.buttonElement.style.minWidth = '200px';\n  $addElement($addElement($addElement($addElement(column, $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), defaultLarge.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), defaultBtn.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), defaultSmall.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), defaultXsmall.buttonElement).row);\n  $appendContent_1(card, column.column);\n  column2 = $copy(column);\n  primaryLarge = $setSize(new Button_1('LARGE', PRIMARY), LARGE);\n  primaryBtn = new Button_1('DEFAULT', PRIMARY);\n  primarySmall = $setSize(new Button_1('SMALL', PRIMARY), SMALL);\n  primaryXsmall = $setSize(new Button_1('XSMALL', PRIMARY), XSMALL);\n  primaryLarge.buttonElement.style.margin = '5px';\n  primaryBtn.buttonElement.style.margin = '5px';\n  primarySmall.buttonElement.style.margin = '5px';\n  primaryXsmall.buttonElement.style.margin = '5px';\n  primaryLarge.buttonElement.style.minWidth = '200px';\n  primaryBtn.buttonElement.style.minWidth = '200px';\n  primarySmall.buttonElement.style.minWidth = '200px';\n  primaryXsmall.buttonElement.style.minWidth = '200px';\n  $addElement($addElement($addElement($addElement(column2, $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), primaryLarge.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), primaryBtn.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), primarySmall.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), primaryXsmall.buttonElement).row);\n  $appendContent_1(card, column2.column);\n  column3 = $copy(column);\n  warningLarge = $setSize(new Button_1('LARGE', WARNING_2), LARGE);\n  warningBtn = new Button_1('DEFAULT', WARNING_2);\n  warningSmall = $setSize(new Button_1('SMALL', WARNING_2), SMALL);\n  warningXsmall = $setSize(new Button_1('XSMALL', WARNING_2), XSMALL);\n  warningLarge.buttonElement.style.margin = '5px';\n  warningBtn.buttonElement.style.margin = '5px';\n  warningSmall.buttonElement.style.margin = '5px';\n  warningXsmall.buttonElement.style.margin = '5px';\n  warningLarge.buttonElement.style.minWidth = '200px';\n  warningBtn.buttonElement.style.minWidth = '200px';\n  warningSmall.buttonElement.style.minWidth = '200px';\n  warningXsmall.buttonElement.style.minWidth = '200px';\n  $addElement($addElement($addElement($addElement(column3, $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), warningLarge.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), warningBtn.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), warningSmall.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), warningXsmall.buttonElement).row);\n  $appendContent_1(card, column3.column);\n  column4 = $copy(column);\n  infoLarge = $setSize(new Button_1('LARGE', INFO_2), LARGE);\n  infoBtn = new Button_1('DEFAULT', INFO_2);\n  infoSmall = $setSize(new Button_1('SMALL', INFO_2), SMALL);\n  infoXsmall = $setSize(new Button_1('XSMALL', INFO_2), XSMALL);\n  infoLarge.buttonElement.style.margin = '5px';\n  infoBtn.buttonElement.style.margin = '5px';\n  infoSmall.buttonElement.style.margin = '5px';\n  infoXsmall.buttonElement.style.margin = '5px';\n  infoLarge.buttonElement.style.minWidth = '200px';\n  infoBtn.buttonElement.style.minWidth = '200px';\n  infoSmall.buttonElement.style.minWidth = '200px';\n  infoXsmall.buttonElement.style.minWidth = '200px';\n  $addElement($addElement($addElement($addElement(column4, $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), infoLarge.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), infoBtn.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), infoSmall.buttonElement).row), $appendContent_7(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), infoXsmall.buttonElement).row);\n  $appendContent_1(card, column4.column);\n  row = $addColumn($addColumn($addColumn($addColumn(new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement)), column), column2), column3), column4);\n  row.row.style.margin = '10px';\n  $appendContent_1(card, row.row);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonSizesInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initButtonSizes)).templated_card_root_element);\n}\n\nfunction $initButtonsBasicGroup(this$static){\n  var card, dangerGroup, defaultGroup, infoGroup, primaryGroup, purpleGroup, successGroup;\n  card = create_5('BASIC EXAMPLE', 'Create group of buttons');\n  defaultGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', ($clinit_StyleType() , DEFAULT_0))), new Button_1('MIDDLE', DEFAULT_0)), new Button_1('RIGHT', DEFAULT_0)).groupElement;\n  defaultGroup.style.margin = '5px';\n  defaultGroup.style.minWidth = '120px';\n  card.body_0.appendChild(defaultGroup);\n  primaryGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', PRIMARY)), new Button_1('MIDDLE', PRIMARY)), new Button_1('RIGHT', PRIMARY)).groupElement;\n  primaryGroup.style.margin = '5px';\n  primaryGroup.style.minWidth = '120px';\n  card.body_0.appendChild(primaryGroup);\n  successGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', SUCCESS_1)), new Button_1('MIDDLE', SUCCESS_1)), new Button_1('RIGHT', SUCCESS_1)).groupElement;\n  successGroup.style.margin = '5px';\n  successGroup.style.minWidth = '120px';\n  card.body_0.appendChild(successGroup);\n  infoGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', INFO_2)), new Button_1('MIDDLE', INFO_2)), new Button_1('RIGHT', INFO_2)).groupElement;\n  infoGroup.style.margin = '5px';\n  infoGroup.style.minWidth = '120px';\n  card.body_0.appendChild(infoGroup);\n  dangerGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', DANGER)), new Button_1('MIDDLE', DANGER)), new Button_1('RIGHT', DANGER)).groupElement;\n  dangerGroup.style.margin = '5px';\n  dangerGroup.style.minWidth = '120px';\n  card.body_0.appendChild(dangerGroup);\n  purpleGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, $setBackground_1(new Button_0('LEFT'), ($clinit_Color() , PURPLE))), $setBackground_1(new Button_0('MIDDLE'), PURPLE)), $setBackground_1(new Button_0('RIGHT'), PURPLE)).groupElement;\n  purpleGroup.style.margin = '5px';\n  purpleGroup.style.minWidth = '120px';\n  card.body_0.appendChild(purpleGroup);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsBasicGroupInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initButtonsBasicGroup)).templated_card_root_element);\n}\n\nfunction $initButtonsToolbar(this$static){\n  var card, colorButtonsToolbar, defaultButtonsToolbar, firstColorGroup, firstDefaultGroup, firstInfoGroup, firstPrimaryGroup, infoButtonsToolbar, primaryButtonsToolbar, row, secondColorGroup, secondDefaultGroup, secondInfoGroup, secondPrimaryGroup, thirdColorGroup, thirdDefaultGroup, thirdInfoGroup, thirdPrimaryGroup;\n  card = create_5('BUTTON TOOLBAR', 'Create buttons toolbar');\n  row = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  firstDefaultGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('1', ($clinit_StyleType() , DEFAULT_0))), new Button_1('2', DEFAULT_0)), new Button_1('3', DEFAULT_0));\n  secondDefaultGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('4', DEFAULT_0)), new Button_1('5', DEFAULT_0)), new Button_1('6', DEFAULT_0));\n  thirdDefaultGroup = $addButton_0(new ButtonsGroup, new Button_1('7', DEFAULT_0));\n  defaultButtonsToolbar = $addGroup($addGroup($addGroup(new ButtonsToolbar, firstDefaultGroup), secondDefaultGroup), thirdDefaultGroup);\n  defaultButtonsToolbar.toolbarElement.style.margin = '5px';\n  row.row.appendChild(defaultButtonsToolbar.toolbarElement);\n  firstPrimaryGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('1', PRIMARY)), new Button_1('2', PRIMARY)), new Button_1('3', PRIMARY));\n  secondPrimaryGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('4', PRIMARY)), new Button_1('5', PRIMARY)), new Button_1('6', PRIMARY));\n  thirdPrimaryGroup = $addButton_0(new ButtonsGroup, new Button_1('7', PRIMARY));\n  primaryButtonsToolbar = $addGroup($addGroup($addGroup(new ButtonsToolbar, firstPrimaryGroup), secondPrimaryGroup), thirdPrimaryGroup);\n  primaryButtonsToolbar.toolbarElement.style.margin = '5px';\n  row.row.appendChild(primaryButtonsToolbar.toolbarElement);\n  firstInfoGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('1', INFO_2)), new Button_1('2', INFO_2)), new Button_1('3', INFO_2));\n  secondInfoGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('4', INFO_2)), new Button_1('5', INFO_2)), new Button_1('6', INFO_2));\n  thirdInfoGroup = $addButton_0(new ButtonsGroup, new Button_1('7', INFO_2));\n  infoButtonsToolbar = $addGroup($addGroup($addGroup(new ButtonsToolbar, firstInfoGroup), secondInfoGroup), thirdInfoGroup);\n  infoButtonsToolbar.toolbarElement.style.margin = '5px';\n  row.row.appendChild(infoButtonsToolbar.toolbarElement);\n  firstColorGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, $setBackground_1(new Button_0('1'), ($clinit_Color() , PURPLE))), $setBackground_1(new Button_0('2'), PURPLE)), $setBackground_1(new Button_0('3'), PURPLE));\n  secondColorGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, $setBackground_1(new Button_0('4'), PURPLE)), $setBackground_1(new Button_0('5'), PURPLE)), $setBackground_1(new Button_0('6'), PURPLE));\n  thirdColorGroup = $addButton_0(new ButtonsGroup, $setBackground_1(new Button_0('7'), PURPLE));\n  colorButtonsToolbar = $addGroup($addGroup($addGroup(new ButtonsToolbar, firstColorGroup), secondColorGroup), thirdColorGroup);\n  colorButtonsToolbar.toolbarElement.style.margin = '5px';\n  row.row.appendChild(colorButtonsToolbar.toolbarElement);\n  infoButtonsToolbar.toolbarElement.style.cssFloat = 'left';\n  defaultButtonsToolbar.toolbarElement.style.cssFloat = 'left';\n  primaryButtonsToolbar.toolbarElement.style.cssFloat = 'left';\n  colorButtonsToolbar.toolbarElement.style.cssFloat = 'left';\n  $appendContent_1(card, row.row);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initButtonsToolbarInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initButtonsToolbar)).templated_card_root_element);\n}\n\nfunction $initDisabledButtons(this$static){\n  var card, dangerDisabled, defaultDisabled, infoDisabled, primaryDisabled, warningDisabled;\n  card = create_5('DISABLED BUTTONS', 'Make buttons look unclickable by fading them back with opacity');\n  defaultDisabled = $disable(new Button_1('DEFAULT', ($clinit_StyleType() , DEFAULT_0))).buttonElement;\n  primaryDisabled = $disable(new Button_1('PRIMARY', PRIMARY)).buttonElement;\n  infoDisabled = $disable(new Button_1('INFO', INFO_2)).buttonElement;\n  warningDisabled = $disable(new Button_1('WARNING', WARNING_2)).buttonElement;\n  dangerDisabled = $disable(new Button_1('DANGER', DANGER)).buttonElement;\n  defaultDisabled.style.margin = '5px';\n  defaultDisabled.style.minWidth = '120px';\n  primaryDisabled.style.margin = '5px';\n  primaryDisabled.style.minWidth = '120px';\n  infoDisabled.style.margin = '5px';\n  infoDisabled.style.minWidth = '120px';\n  warningDisabled.style.margin = '5px';\n  warningDisabled.style.minWidth = '120px';\n  dangerDisabled.style.margin = '5px';\n  dangerDisabled.style.minWidth = '120px';\n  card.body_0.appendChild(defaultDisabled);\n  card.body_0.appendChild(primaryDisabled);\n  card.body_0.appendChild(infoDisabled);\n  card.body_0.appendChild(warningDisabled);\n  card.body_0.appendChild(dangerDisabled);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initDisabledButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initDisabledButtons)).templated_card_root_element);\n}\n\nfunction $initDropUp(this$static){\n  var card, danger, element, group, info, primary, success;\n  card = create_5('DROPUP VARIATION', 'Trigger dropdown menus above elements.');\n  element = $dropup($addAction($addAction(new DropdownButton_0('DEFAULT', ($clinit_StyleType() , DEFAULT_0)), new DropdownAction('Action')), new DropdownAction('Another action'))).groupElement;\n  primary = $dropup($addAction($addAction(new DropdownButton_0('PRIMARY', PRIMARY), new DropdownAction('Action')), new DropdownAction('Another action'))).groupElement;\n  success = $dropup($addAction($addAction(new DropdownButton_0('SUCCESS', SUCCESS_1), new DropdownAction('Action')), new DropdownAction('Another action'))).groupElement;\n  info = $dropup($addAction($addAction(new DropdownButton_0('INFO', INFO_2), new DropdownAction('Action')), new DropdownAction('Another action'))).groupElement;\n  danger = $dropup($addAction($addAction(new DropdownButton_0('Dropdown', DANGER), new DropdownAction('Action')), new DropdownAction('Another action')));\n  group = $addDropDown($addButton_0(new ButtonsGroup, new Button_1('DANGER', DANGER)), danger).groupElement;\n  element.style.margin = '5px';\n  primary.style.margin = '5px';\n  success.style.margin = '5px';\n  info.style.margin = '5px';\n  group.style.margin = '5px';\n  card.body_0.appendChild(element);\n  card.body_0.appendChild(primary);\n  card.body_0.appendChild(success);\n  card.body_0.appendChild(info);\n  card.body_0.appendChild(group);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initDropUpInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initDropUp)).templated_card_root_element);\n}\n\nfunction $initIconButtons(this$static){\n  var acUnitIcon, accessAlarmIcon, addCircleIconCRL, adjustIconCRL, airplaneModeActiveIconCRL, airplayIconCRL, albumIconCRL, alloutIconCRL, appsIconCRL, artTrackIconCRL, assessmentIconCRL, assistantIconCRL, card, homeIcon, keyboardIcon, large, large_circle, micIcon, moreIcon, normal, normal_circle, placeIconCRL, row, row1, row2, smallCircle, small_icon_button, weekendIconCRL;\n  card = create_5('ICON BUTTONS', 'Make icon buttons');\n  normal = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  normal_circle = $heading('Normal Icon Button');\n  normal.row.appendChild(normal_circle);\n  $appendContent_1(card, normal.row);\n  row = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  homeIcon = $setButtonType(new IconButton(create_8('home')), ($clinit_StyleType() , DEFAULT_0)).buttonElement;\n  micIcon = $setButtonType(new IconButton_0(create_8('mic'), PRIMARY), PRIMARY).buttonElement;\n  moreIcon = $setButtonType(new IconButton_0(create_8('more'), INFO_2), INFO_2).buttonElement;\n  keyboardIcon = $setButtonType(new IconButton_0(create_8('keyboard'), SUCCESS_1), SUCCESS_1).buttonElement;\n  acUnitIcon = $setButtonType(new IconButton_0(create_8('ac_unit'), WARNING_2), WARNING_2).buttonElement;\n  accessAlarmIcon = $setButtonType(new IconButton_0(create_8('access_alarm'), DANGER), DANGER).buttonElement;\n  homeIcon.style.margin = '5px';\n  micIcon.style.margin = '5px';\n  moreIcon.style.margin = '5px';\n  keyboardIcon.style.margin = '5px';\n  acUnitIcon.style.margin = '5px';\n  accessAlarmIcon.style.margin = '5px';\n  row.row.appendChild(homeIcon);\n  row.row.appendChild(micIcon);\n  row.row.appendChild(moreIcon);\n  row.row.appendChild(keyboardIcon);\n  row.row.appendChild(acUnitIcon);\n  row.row.appendChild(accessAlarmIcon);\n  $appendContent_1(card, row.row);\n  smallCircle = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  small_icon_button = $heading('Small Circle Icon Button');\n  smallCircle.row.appendChild(small_icon_button);\n  $appendContent_1(card, smallCircle.row);\n  row1 = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  addCircleIconCRL = $setButtonType($circle_0(new IconButton(create_8('add_circle')), ($clinit_CircleSize() , SMALL_0)), DEFAULT_0).buttonElement;\n  placeIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('place'), PRIMARY), SMALL_0), PRIMARY).buttonElement;\n  airplaneModeActiveIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('airplanemode_active'), INFO_2), SMALL_0), INFO_2).buttonElement;\n  albumIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('album'), SUCCESS_1), SMALL_0), SUCCESS_1).buttonElement;\n  weekendIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('weekend'), WARNING_2), SMALL_0), WARNING_2).buttonElement;\n  airplayIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('airplay'), DANGER), SMALL_0), DANGER).buttonElement;\n  addCircleIconCRL.style.margin = '5px';\n  placeIconCRL.style.margin = '5px';\n  airplaneModeActiveIconCRL.style.margin = '5px';\n  albumIconCRL.style.margin = '5px';\n  weekendIconCRL.style.margin = '5px';\n  airplayIconCRL.style.margin = '5px';\n  row1.row.appendChild(addCircleIconCRL);\n  row1.row.appendChild(placeIconCRL);\n  row1.row.appendChild(airplaneModeActiveIconCRL);\n  row1.row.appendChild(albumIconCRL);\n  row1.row.appendChild(weekendIconCRL);\n  row1.row.appendChild(airplayIconCRL);\n  $appendContent_1(card, row1.row);\n  large = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  large_circle = $heading('Large Circle Icon Button');\n  large.row.appendChild(large_circle);\n  $appendContent_1(card, large.row);\n  row2 = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  adjustIconCRL = $setButtonType($circle_0(new IconButton(create_8('adjust')), LARGE_0), DEFAULT_0).buttonElement;\n  alloutIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('all_out'), PRIMARY), LARGE_0), PRIMARY).buttonElement;\n  appsIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('apps'), INFO_2), LARGE_0), INFO_2).buttonElement;\n  artTrackIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('art_track'), SUCCESS_1), LARGE_0), SUCCESS_1).buttonElement;\n  assessmentIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('assessment'), WARNING_2), LARGE_0), WARNING_2).buttonElement;\n  assistantIconCRL = $setButtonType($circle_0(new IconButton_0(create_8('assistant'), DANGER), LARGE_0), DANGER).buttonElement;\n  adjustIconCRL.style.margin = '5px';\n  alloutIconCRL.style.margin = '5px';\n  appsIconCRL.style.margin = '5px';\n  artTrackIconCRL.style.margin = '5px';\n  assessmentIconCRL.style.margin = '5px';\n  assistantIconCRL.style.margin = '5px';\n  row2.row.appendChild(adjustIconCRL);\n  row2.row.appendChild(alloutIconCRL);\n  row2.row.appendChild(appsIconCRL);\n  row2.row.appendChild(artTrackIconCRL);\n  row2.row.appendChild(assessmentIconCRL);\n  row2.row.appendChild(assistantIconCRL);\n  $appendContent_1(card, row2.row);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initIconButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initIconButtons)).templated_card_root_element);\n}\n\nfunction $initJustifyGroup(this$static){\n  var dropDown, element1, justifiedGroup, justifiedGroupCard, justify;\n  justifiedGroupCard = create_5('JUSTIFIED BUTTON GROUPS', 'Make a group of buttons stretch at equal sizes to span the entire width of its parent. Also works with button dropdowns within the button group.');\n  dropDown = $addAction($separator($addAction(new DropdownButton_0('Drop down', ($clinit_StyleType() , DEFAULT_0)), new DropdownAction('Action'))), new DropdownAction('Action2'));\n  justifiedGroup = new JustifiedGroup;\n  $addButton_1(justifiedGroup, new Button_1('LEFT', PRIMARY));\n  $addButton_1(justifiedGroup, new Button_1('MIDDLE', INFO_2));\n  $addButton_1(justifiedGroup, new Button_1('RIGHT', DANGER));\n  justify = $justify(dropDown);\n  justifiedGroup.group_0.groupElement.appendChild(justify);\n  element1 = justifiedGroup.group_0.groupElement;\n  element1.style.margin = '5px';\n  element1.style.minWidth = '120px';\n  justifiedGroupCard.body_0.appendChild(justifiedGroup.group_0.groupElement);\n  this$static.element.appendChild(justifiedGroupCard.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initJustifyGroupInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initJustifyGroup)).templated_card_root_element);\n}\n\nfunction $initMaterialDesignButtons(this$static){\n  var card, greenBtn, indigoBtn, lightBlueBtn, purpleBtn, redBtn;\n  card = create_5('METARIAL DESIGN BUTTONS', 'Use any of the available button classes to quickly create a styled button');\n  redBtn = $setBackground_1(new Button_0('RED'), ($clinit_Color() , RED)).buttonElement;\n  redBtn.style.margin = '5px';\n  redBtn.style.minWidth = '120px';\n  card.body_0.appendChild(redBtn);\n  purpleBtn = $setBackground_1(new Button_0('PURPLE'), PURPLE).buttonElement;\n  purpleBtn.style.margin = '5px';\n  purpleBtn.style.minWidth = '120px';\n  card.body_0.appendChild(purpleBtn);\n  indigoBtn = $setBackground_1(new Button_0('INDIGO'), INDIGO).buttonElement;\n  indigoBtn.style.margin = '5px';\n  indigoBtn.style.minWidth = '120px';\n  card.body_0.appendChild(indigoBtn);\n  lightBlueBtn = $setBackground_1(new Button_0('LIGHT BLUE'), LIGHT_BLUE).buttonElement;\n  lightBlueBtn.style.margin = '5px';\n  lightBlueBtn.style.minWidth = '120px';\n  card.body_0.appendChild(lightBlueBtn);\n  greenBtn = $setBackground_1(new Button_0('GREEN'), GREEN).buttonElement;\n  greenBtn.style.margin = '5px';\n  greenBtn.style.minWidth = '120px';\n  card.body_0.appendChild(greenBtn);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initMaterialDesignButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initMaterialDesignButtons)).templated_card_root_element);\n}\n\nfunction $initNestingGroup(this$static){\n  var card, dangerGroup, defaultGroup, infoGroup, primaryGroup, successGroup, warningGroup;\n  card = create_5('SIZING', 'Dropdown can be used inside a group of buttons.');\n  defaultGroup = $numbersNestedGroup(($clinit_StyleType() , DEFAULT_0));\n  defaultGroup.style.margin = '5px';\n  defaultGroup.style.minWidth = '120px';\n  primaryGroup = $numbersNestedGroup(PRIMARY);\n  primaryGroup.style.margin = '5px';\n  primaryGroup.style.minWidth = '120px';\n  infoGroup = $numbersNestedGroup(INFO_2);\n  infoGroup.style.margin = '5px';\n  infoGroup.style.minWidth = '120px';\n  successGroup = $numbersNestedGroup(SUCCESS_1);\n  successGroup.style.margin = '5px';\n  successGroup.style.minWidth = '120px';\n  dangerGroup = $numbersNestedGroup(DANGER);\n  dangerGroup.style.margin = '5px';\n  dangerGroup.style.minWidth = '120px';\n  warningGroup = $numbersNestedGroup(WARNING_2);\n  warningGroup.style.margin = '5px';\n  warningGroup.style.minWidth = '120px';\n  card.body_0.appendChild(defaultGroup);\n  card.body_0.appendChild(primaryGroup);\n  card.body_0.appendChild(infoGroup);\n  card.body_0.appendChild(successGroup);\n  card.body_0.appendChild(dangerGroup);\n  card.body_0.appendChild(warningGroup);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initNestingGroupInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initNestingGroup)).templated_card_root_element);\n}\n\nfunction $initSingleDropdownButtons(this$static){\n  var card, dangerButton, defaultDropdown, infoDropdown, primaryDropdown, warningDropdown;\n  card = create_5('SINGLE BUTTON DROPDOWNS', 'Turn a button into a dropdown toggle with some basic markup changes.');\n  defaultDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('DEFAULT', ($clinit_StyleType() , DEFAULT_0)), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  primaryDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('PRIMARY', PRIMARY), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  infoDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('INFO', INFO_2), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  dangerButton = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('DANGER', DANGER), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  warningDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('WARNING', WARNING_2), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  defaultDropdown.groupElement.style.margin = '5px';\n  primaryDropdown.groupElement.style.margin = '5px';\n  infoDropdown.groupElement.style.margin = '5px';\n  warningDropdown.groupElement.style.margin = '5px';\n  dangerButton.groupElement.style.margin = '5px';\n  $appendContent_1(card, defaultDropdown.groupElement);\n  $appendContent_1(card, primaryDropdown.groupElement);\n  $appendContent_1(card, infoDropdown.groupElement);\n  $appendContent_1(card, warningDropdown.groupElement);\n  $appendContent_1(card, dangerButton.groupElement);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initSingleDropdownButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initSingleDropdownButtons)).templated_card_root_element);\n}\n\nfunction $initSizingGroup(this$static){\n  var card, column1, column2, column3, column4, defaultGroup, largeGroup, row, smallGroup, xsmallGroup;\n  card = create_5('SIZING', 'Instead of applying button sizing classes to every button in a group, size can be applied to the group and will be applied to every button.');\n  row = new Row(castToNative(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['row clearfix'])), 3).element, $wnd.HTMLDivElement));\n  column1 = $onXSmall($onSmall($onMedium($onLarge(new Column(castToNative((new HtmlContentBuilder(castToNative(document_0.createElement('div'), $wnd.HTMLElement))).element, $wnd.HTMLDivElement)), ($clinit_Column$OnLarge() , three)), ($clinit_Column$OnMedium() , four_0)), ($clinit_Column$OnSmall() , nine_1)), ($clinit_Column$OnXSmall() , twelve_2));\n  largeGroup = $setSize_0($addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', ($clinit_StyleType() , DEFAULT_0))), new Button_1('MIDDLE', DEFAULT_0)), new Button_1('RIGHT', DEFAULT_0)), ($clinit_ButtonSize() , LARGE)).groupElement;\n  largeGroup.style.margin = '15px';\n  column1.column.appendChild($heading('Large Button Group'));\n  column1.column.appendChild(largeGroup);\n  column2 = $copy(column1);\n  defaultGroup = $addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', DEFAULT_0)), new Button_1('MIDDLE', DEFAULT_0)), new Button_1('RIGHT', DEFAULT_0)).groupElement;\n  defaultGroup.style.margin = '15px';\n  column2.column.appendChild($heading('Default Button Group'));\n  column2.column.appendChild(defaultGroup);\n  column3 = $copy(column1);\n  smallGroup = $setSize_0($addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', DEFAULT_0)), new Button_1('MIDDLE', DEFAULT_0)), new Button_1('RIGHT', DEFAULT_0)), SMALL).groupElement;\n  smallGroup.style.margin = '15px';\n  column3.column.appendChild($heading('Small Button Group'));\n  column3.column.appendChild(smallGroup);\n  column4 = $copy(column1);\n  xsmallGroup = $setSize_0($addButton_0($addButton_0($addButton_0(new ButtonsGroup, new Button_1('LEFT', DEFAULT_0)), new Button_1('MIDDLE', DEFAULT_0)), new Button_1('RIGHT', DEFAULT_0)), XSMALL).groupElement;\n  xsmallGroup.style.margin = '15px';\n  column4.column.appendChild($heading('Extra-Small Button Group'));\n  column4.column.appendChild(xsmallGroup);\n  column1.column.classList.add('align-center');\n  column2.column.classList.add('align-center');\n  column3.column.classList.add('align-center');\n  column4.column.classList.add('align-center');\n  $addColumn($addColumn($addColumn((row.row.appendChild(column1.column) , row), column2), column3), column4);\n  $appendContent_1(card, row.row);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initSizingGroupInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initSizingGroup)).templated_card_root_element);\n}\n\nfunction $initSplitButton(this$static){\n  var card, defaultDropdown, defaultSplit, infoDropdown, infoSplit, primaryDropdown, primarySplit, warningDropdown, warningSplit;\n  card = create_5('SPLITE BUTTON DROPDOWNS', 'Similarly, create split button dropdowns with the same markup changes, only with a separate button.');\n  defaultDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('Toggle Dropdown', ($clinit_StyleType() , DEFAULT_0)), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  defaultSplit = $addDropdown(new SplitButton('DEFAULT', DEFAULT_0), defaultDropdown).groupElement;\n  card.body_0.appendChild(defaultSplit);\n  primaryDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('Toggle Dropdown', PRIMARY), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  primarySplit = $addDropdown(new SplitButton('PRIMARY', PRIMARY), primaryDropdown).groupElement;\n  card.body_0.appendChild(primarySplit);\n  warningDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('Toggle Dropdown', WARNING_2), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  warningSplit = $addDropdown(new SplitButton('WARNING', WARNING_2), warningDropdown).groupElement;\n  card.body_0.appendChild(warningSplit);\n  infoDropdown = $addAction($separator($addAction($addAction($addAction(new DropdownButton_0('Toggle Dropdown', INFO_2), new DropdownAction('Action')), new DropdownAction('Another action')), new DropdownAction('Something else here'))), new DropdownAction('Separated link'));\n  infoSplit = $addDropdown(new SplitButton('INFO', INFO_2), infoDropdown).groupElement;\n  card.body_0.appendChild(infoSplit);\n  defaultSplit.style.margin = '10px';\n  primarySplit.style.margin = '10px';\n  warningSplit.style.margin = '10px';\n  infoSplit.style.margin = '10px';\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initSplitButtonInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initSplitButton)).templated_card_root_element);\n}\n\nfunction $initTextIconButtons(this$static){\n  var card, extension, home_0, lock, print_0, scanWifi, takeOff;\n  card = create_5('ICON & TEXT BUTTONS', 'Make icon & text buttons');\n  extension = $setContent(new IconButton(create_8('extension')), 'EXTENSION').buttonElement;\n  home_0 = $setContent(new IconButton_0(create_8('home'), ($clinit_StyleType() , PRIMARY)), 'HOME').buttonElement;\n  lock = $setContent(new IconButton_0(create_8('lock'), SUCCESS_1), 'LOCK').buttonElement;\n  scanWifi = $setContent(new IconButton_0(create_8('perm_scan_wifi'), INFO_2), 'SCAN WIFI').buttonElement;\n  takeOff = $setContent(new IconButton_0(create_8('flight_takeoff'), WARNING_2), 'TAKE OFF').buttonElement;\n  print_0 = $setContent(new IconButton_0(create_8('print'), DANGER), 'PRINT').buttonElement;\n  extension.style.margin = '5px';\n  extension.style.minWidth = '120px';\n  home_0.style.margin = '5px';\n  home_0.style.minWidth = '120px';\n  lock.style.margin = '5px';\n  lock.style.minWidth = '120px';\n  scanWifi.style.margin = '5px';\n  scanWifi.style.minWidth = '120px';\n  takeOff.style.margin = '5px';\n  takeOff.style.minWidth = '120px';\n  print_0.style.margin = '5px';\n  print_0.style.minWidth = '120px';\n  card.body_0.appendChild(extension);\n  card.body_0.appendChild(home_0);\n  card.body_0.appendChild(lock);\n  card.body_0.appendChild(scanWifi);\n  card.body_0.appendChild(takeOff);\n  card.body_0.appendChild(print_0);\n  this$static.element.appendChild(card.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initTextIconButtonsInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initTextIconButtons)).templated_card_root_element);\n}\n\nfunction $initVerticalGroup(this$static){\n  var group, verticalGroupCard;\n  verticalGroupCard = create_5('VERTICAL VARIATION', 'Make a set of buttons appear vertically stacked rather than horizontally.');\n  group = $switchClasses($addButton_0($addDropDown($addButton_0($addButton_0(new ButtonsGroup, new Button_1('Button', ($clinit_StyleType() , DEFAULT_0))), new Button_1('Button', PRIMARY)), $addAction($addAction(new DropdownButton_0('Dropdown', INFO_2), new DropdownAction('Dropdown link')), new DropdownAction('Dropdown link'))), new Button_1('Button', DANGER)));\n  group.groupElement.style.margin = '5px';\n  verticalGroupCard.body_0.appendChild(group.groupElement);\n  this$static.element.appendChild(verticalGroupCard.templated_card_root_element);\n  this$static.element.appendChild(createCodeCard(($clinit_CodeResource_5() , $clinit_CodeResource_default_InlineClientBundleGenerator$initVerticalGroupInitializer() , $clinit_CodeResource_default_InlineClientBundleGenerator_5() , initVerticalGroup)).templated_card_root_element);\n}\n\nfunction $numbersNestedGroup(type_0){\n  var primaryDropDown;\n  primaryDropDown = $addAction($addAction($setButtonType_0(new DropdownButton, type_0), new DropdownAction('Dropdown link')), new DropdownAction('Dropdown link'));\n  return $addDropDown($addButton_0($addButton_0(new ButtonsGroup, $setButtonType(new Button_0('1'), type_0)), $setButtonType(new Button_0('2'), type_0)), primaryDropDown).groupElement;\n}\n\ndefineClass(926, 1, $intern_34);\n_.onSuccess_0 = function onSuccess_1(){\n  this.this$01.element.appendChild(create_6('BUTTONS').element);\n  $initBootstrapButtons(this.this$01);\n  $initMaterialDesignButtons(this.this$01);\n  $initButtonSizes(this.this$01);\n  $initBlockButtons(this.this$01);\n  $initDisabledButtons(this.this$01);\n  $initIconButtons(this.this$01);\n  $initTextIconButtons(this.this$01);\n  this.this$01.element.appendChild(create_7('BUTTON GROUPS', 'Group a series of buttons together on a single line with the button group').element);\n  $initButtonsBasicGroup(this.this$01);\n  $initButtonsToolbar(this.this$01);\n  $initSizingGroup(this.this$01);\n  $initNestingGroup(this.this$01);\n  $initVerticalGroup(this.this$01);\n  $initJustifyGroup(this.this$01);\n  this.this$01.element.appendChild(create_7('BUTTON DROPDOWNS', 'Use any button to trigger a dropdown menu by placing it within a .btn-group and providing the proper menu markup.').element);\n  $initSingleDropdownButtons(this.this$01);\n  $initSplitButton(this.this$01);\n  $initDropUp(this.this$01);\n}\n;\nfunction $disable(this$static){\n  this$static.buttonElement.setAttribute('disabled', 'disabled');\n  return this$static;\n}\n\nfunction $setBlock(this$static){\n  this$static.buttonElement.classList.add('btn-block');\n  return this$static;\n}\n\ndefineClass(7, 1420, $intern_41);\n_.justify = function justify_0(){\n  return castTo($attr(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('a'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, [this.buttonElement.className])), 3), 'role', 'button'), 3).textContent_0(this.buttonElement.textContent).element;\n}\n;\nfunction $addGroup(this$static, group){\n  this$static.toolbarElement.appendChild(group.groupElement);\n  return this$static;\n}\n\nfunction ButtonsToolbar(){\n  this.toolbarElement = castTo($attr(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['btn-toolbar'])), 3), 'role', 'toolbar'), 3).element;\n}\n\ndefineClass(194, 1, {}, ButtonsToolbar);\n_.asElement = function asElement_7(){\n  return this.toolbarElement;\n}\n;\nvar Lorg_dominokit_domino_ui_button_ButtonsToolbar_2_classLit = createForClass('org.dominokit.domino.ui.button', 'ButtonsToolbar', 194);\nfunction DropdownAction(content_0){\n  this.iElement = castToNative((new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('li'), $wnd.HTMLElement))).element, $wnd.HTMLLIElement);\n  this.aElement = castToNative($textContent(new HtmlContentBuilder(castToNative(document_0.createElement('a'), $wnd.HTMLElement)), content_0).element, $wnd.HTMLAnchorElement);\n  this.iElement.appendChild(this.aElement);\n}\n\ndefineClass(23, 1, {199:1}, DropdownAction);\n_.asElement = function asElement_8(){\n  return this.iElement;\n}\n;\n_.justify = function justify_1(){\n  return castToNative(this.iElement.cloneNode(true), $wnd.HTMLLIElement);\n}\n;\nvar Lorg_dominokit_domino_ui_button_DropdownAction_2_classLit = createForClass('org.dominokit.domino.ui.button', 'DropdownAction', 23);\nfunction $addAction(this$static, action){\n  $add_2(this$static.items, action);\n  this$static.actionsElement.appendChild(action.iElement);\n  return this$static;\n}\n\nfunction $asDropDown(this$static, buttonElement, groupElement){\n  buttonElement.classList.add('dropdown-toggle');\n  buttonElement.setAttribute('data-toggle', 'dropdown');\n  buttonElement.setAttribute('aria-haspopup', ($clinit_Boolean() , true));\n  buttonElement.setAttribute('aria-expanded', true);\n  buttonElement.appendChild(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('span'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['caret'])), 3).element);\n  buttonElement.setAttribute('type', 'button');\n  buttonElement.addEventListener('click', new DropdownButton$lambda$1$Type(this$static, groupElement));\n  return buttonElement;\n}\n\nfunction $closeAllGroups(this$static){\n  var elementsByName, i, item_0;\n  elementsByName = ($clinit_DomGlobal() , document_0).body.getElementsByClassName(this$static.groupElement.className);\n  for (i = 0; i < elementsByName.length; i++) {\n    item_0 = castToNative(elementsByName.item(i), $wnd.Element);\n    item_0.classList.contains('open') && item_0.classList.remove('open');\n  }\n}\n\nfunction $dropup(this$static){\n  this$static.groupElement.classList.add('dropup');\n  return this$static;\n}\n\nfunction $justify(this$static){\n  var button, cloneDropdownButton, item_0, item$iterator, style, style$iterator;\n  button = new Button_0(this$static.button_0.buttonElement.textContent);\n  for (style$iterator = new AbstractList$IteratorImpl($asList(this$static.button_0.buttonElement.classList)); style$iterator.i < style$iterator.this$01_0.size_1();) {\n    style = (checkCriticalElement(style$iterator.i < style$iterator.this$01_0.size_1()) , castToString(style$iterator.this$01_0.get_1(style$iterator.i++)));\n    button.buttonElement.classList.add(style);\n  }\n  cloneDropdownButton = new DropdownButton_1(button);\n  for (item$iterator = $listIterator(this$static.items, 0); item$iterator.currentNode_0 != item$iterator.this$01.tail;) {\n    item_0 = castTo($next_1(item$iterator), 199);\n    cloneDropdownButton.actionsElement.appendChild(item_0.justify());\n  }\n  return cloneDropdownButton.groupElement;\n}\n\nfunction $lambda$0_9(this$static, evt_0){\n  var element;\n  element = castToNative(evt_0.target, $wnd.HTMLElement);\n  element.classList.contains('btn') || $closeAllGroups(this$static);\n}\n\nfunction $lambda$1_7(this$static, groupElement_1, event_1){\n  $closeAllGroups(this$static);\n  groupElement_1.classList.add('open');\n  event_1.stopPropagation();\n}\n\nfunction $separator(this$static){\n  var justifiableSeparator;\n  justifiableSeparator = new DropdownButton$JustifiableSeparator;\n  $add_2(this$static.items, justifiableSeparator);\n  this$static.actionsElement.appendChild(justifiableSeparator.separator);\n  return this$static;\n}\n\nfunction $setButtonType_0(this$static, type_0){\n  $setButtonType(this$static.button_0, type_0);\n  return this$static;\n}\n\nfunction DropdownButton(){\n  DropdownButton_1.call(this, new Button_0('Dropdown'));\n}\n\nfunction DropdownButton_0(content_0, type_0){\n  DropdownButton_1.call(this, $setButtonType(new Button_0(content_0), type_0));\n}\n\nfunction DropdownButton_1(button){\n  this.groupElement = (new ButtonsGroup).groupElement;\n  this.actionsElement = castToNative(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('ul'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['dropdown-menu'])), 3).element, $wnd.HTMLUListElement);\n  this.items = new LinkedList;\n  this.button_0 = button;\n  $wnd.window.window.addEventListener('click', new DropdownButton$lambda$0$Type(this));\n  this.groupElement.appendChild($asDropDown(this, this.button_0.buttonElement, this.groupElement));\n  this.groupElement.appendChild(this.actionsElement);\n}\n\ndefineClass(56, 1, {199:1}, DropdownButton, DropdownButton_0, DropdownButton_1);\n_.asElement = function asElement_9(){\n  return this.groupElement;\n}\n;\n_.justify = function justify_2(){\n  return $justify(this);\n}\n;\nvar Lorg_dominokit_domino_ui_button_DropdownButton_2_classLit = createForClass('org.dominokit.domino.ui.button', 'DropdownButton', 56);\nfunction DropdownButton$JustifiableSeparator(){\n  this.separator = castToNative(castTo(castTo($attr(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('li'), $wnd.HTMLElement)), 'role', 'separator'), 3).css(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['divider'])), 3).element, $wnd.HTMLLIElement);\n}\n\ndefineClass(1324, 1, {199:1}, DropdownButton$JustifiableSeparator);\n_.asElement = function asElement_10(){\n  return this.separator;\n}\n;\n_.justify = function justify_3(){\n  return castToNative(this.separator.cloneNode(true), $wnd.HTMLElement);\n}\n;\nvar Lorg_dominokit_domino_ui_button_DropdownButton$JustifiableSeparator_2_classLit = createForClass('org.dominokit.domino.ui.button', 'DropdownButton/JustifiableSeparator', 1324);\nfunction DropdownButton$lambda$0$Type($$outer_0){\n  this.$$outer_0 = $$outer_0;\n}\n\ndefineClass(1325, 1, {}, DropdownButton$lambda$0$Type);\n_.handleEvent = function handleEvent_175(arg0){\n  $lambda$0_9(this.$$outer_0, arg0);\n}\n;\nvar Lorg_dominokit_domino_ui_button_DropdownButton$lambda$0$Type_2_classLit = createForClass('org.dominokit.domino.ui.button', 'DropdownButton/lambda$0$Type', 1325);\nfunction DropdownButton$lambda$1$Type($$outer_0, groupElement_1){\n  this.$$outer_0 = $$outer_0;\n  this.groupElement_1 = groupElement_1;\n}\n\ndefineClass(1326, 1, {}, DropdownButton$lambda$1$Type);\n_.handleEvent = function handleEvent_176(arg0){\n  $lambda$1_7(this.$$outer_0, this.groupElement_1, arg0);\n}\n;\nvar Lorg_dominokit_domino_ui_button_DropdownButton$lambda$1$Type_2_classLit = createForClass('org.dominokit.domino.ui.button', 'DropdownButton/lambda$1$Type', 1326);\nfunction $addButton(this$static, button){\n  this$static.groupElement.appendChild(button.buttonElement);\n}\n\nfunction $addDropdown(this$static, dropdownButton){\n  var content_0, dropdownElement;\n  dropdownElement = $justify(dropdownButton);\n  content_0 = dropdownElement.firstChild.textContent;\n  dropdownElement.firstChild.removeChild(dropdownElement.firstChild.firstChild);\n  dropdownElement.firstChild.appendChild(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('span'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['sr-only'])), 3).textContent_0(content_0).element);\n  this$static.groupElement.appendChild(dropdownElement);\n  return this$static;\n}\n\nfunction SplitButton(content_0, type_0){\n  this.groupElement = (new ButtonsGroup).groupElement;\n  $addButton(this, $setButtonType(new Button_0(content_0), type_0));\n}\n\ndefineClass(195, 1, {}, SplitButton);\n_.asElement = function asElement_11(){\n  return this.groupElement;\n}\n;\nvar Lorg_dominokit_domino_ui_button_SplitButton_2_classLit = createForClass('org.dominokit.domino.ui.button', 'SplitButton', 195);\nfunction $addButton_0(this$static, button){\n  $appendChild(this$static, button.buttonElement);\n  return this$static;\n}\n\nfunction $addDropDown(this$static, nestedDropDown){\n  $appendChild(this$static, nestedDropDown.groupElement);\n  return this$static;\n}\n\nfunction $appendChild(this$static, element){\n  this$static.groupElement.appendChild(element);\n}\n\nfunction $setSize_0(this$static, size_0){\n  !!this$static.size_0 && this$static.groupElement.classList.remove('btn-group-' + this$static.size_0.style_0);\n  this$static.groupElement.classList.add('btn-group-' + size_0.style_0);\n  this$static.size_0 = size_0;\n  return this$static;\n}\n\nfunction $switchClasses(this$static){\n  this$static.groupElement.classList.remove('btn-group');\n  this$static.groupElement.classList.add('btn-group-vertical');\n  return this$static;\n}\n\nfunction ButtonsGroup(){\n  this.groupElement = castTo($attr(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('div'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, ['btn-group'])), 3), 'role', 'group'), 3).element;\n}\n\ndefineClass(42, 1, {}, ButtonsGroup);\n_.asElement = function asElement_12(){\n  return this.groupElement;\n}\n;\nvar Lorg_dominokit_domino_ui_button_group_ButtonsGroup_2_classLit = createForClass('org.dominokit.domino.ui.button.group', 'ButtonsGroup', 42);\nfunction $addButton_1(this$static, button){\n  var justify;\n  justify = castTo($attr(castTo($css(new HtmlContentBuilder(castToNative(($clinit_DomGlobal() , document_0).createElement('a'), $wnd.HTMLElement)), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_8, 2, 6, [button.buttonElement.className])), 3), 'role', 'button'), 3).textContent_0(button.buttonElement.textContent).element;\n  this$static.group_0.groupElement.appendChild(justify);\n  return justify;\n}\n\nfunction JustifiedGroup(){\n  this.group_0 = new ButtonsGroup;\n  this.group_0.groupElement.classList.add('btn-group-justified');\n}\n\ndefineClass(1327, 1, {}, JustifiedGroup);\n_.asElement = function asElement_13(){\n  return this.group_0.groupElement;\n}\n;\nvar Lorg_dominokit_domino_ui_button_group_JustifiedGroup_2_classLit = createForClass('org.dominokit.domino.ui.button.group', 'JustifiedGroup', 1327);\nfunction $appendContent_7(this$static, element){\n  this$static.row.appendChild(element);\n  return this$static;\n}\n\n$entry(onLoad)(2);\n\n//# sourceMappingURL=static/gwt/extra/app/symbolMaps/995EF99B9D4D38108CA18C4F03BB4A6B_sourceMap2.json \n//# sourceURL=app-2.js\n")
